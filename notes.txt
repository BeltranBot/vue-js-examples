Data Binding
  v-bind: bind data with html elements
    v-bind:href='website'
    :href='website'
    v-bind:prop='variable'
    :prop='variable'

  v-html: to parse html within a vue view
  data: {
    websiteTag: '<a href="http://www.thenetninja.co.uk">The net ninja website</a>'
  }
  <p v-html:='websiteTag'></p>

Events
  v-on:click
    methods: {
      add: function (inc) {
        this.age += inc
      },
    <button type="button" v-on:click='age++'>Add a year</button>
    <button type="button" v-on:dblclick='add(10)'>Add 10 years</button>
    @click
  @mousemove
  <div id="canvas" v-on:mousemove="updateXY">
  methods: {
    updateXY: function (event) {
    this.x = event.offsetX
    this.y = event.offsetY
    }
  }

Event modifiers
  once
  @click.once: only executes the event once
  <button type="button" v-on:click.once='add(1)'>Add a year</button>
  prevent
  <a v-on:click.prevent="click" href="http://www.thenetninja.co.uk">The Net Ninja</a>

Two-way Data binding
  v-model
  data: {
    data: ''
  }
  <input type="text" @keyup='logName' v-model='name'>

Computed values: will only update when one of the values of the computed function is called
  data: {
    a: 0,
    age: 25
  },
  computed: {
    addToA: function () {
      return this.a + this.age
    }
  }
  <p>Age + A = {{addToA}}</p>

Dynamic CSS: classes work with objects
  data: {
    available: true,
    nearby: false
  },
  methods: {

  },
  computed: {
    compClasses: function () {
      return {
        available: this.available,
        nearby: this.nearby
      }
    }
  }
  <button type="button" @click="nearby = !nearby">Toggle Nearby</button>
  <button type="button" @click="available = !available">Toggle Available</button>
  <div :class="compClasses">
    <span>Ryu</span>
  </div>

v-if and v-show: shows and hides content if the variable associated is true or false,
differences between if and show is that if will remove the dom if false while show will
only will set it as display none
  data: {
    error: false,
    success: false
  }
  <button type="button" @click="error =! error">Toggle Error</button>
  <button type="button" @click="success =! success">Toggle Success</button>
  <p v-if="error">
    There has been an error
  </p>
  <p v-else-if="success">
    Whooo. Success :)
  </p>

v-for
  data: {
    characters: ['mario', 'lugi', 'yoshi', 'bowser'],
    ninjas: [
      { name: 'ryu', age: 25 },
      { name: 'guile', age: 35 },
      { name: 'ken', age: 55 }
    ]
  },
  <div id="vue-app">
    <h1>Looping through lists</h1>
    <ul>
      <li v-for="(character, index) in characters">
        {{index}}.{{ character }}
      </li>
    </ul>
    <ul>
      <li v-for="(ninja, index) in ninjas">
        {{index}}.{{ninja.name}} - {{ninja.age}}
      </li>
    </ul>
    <template v-for="(ninja, index) in ninjas">
      <h3>{{index}}.{{ninja.name}}</h3>
      <p>{{ninja.age}}</p>
    </template>
    <template v-for="ninja in ninjas">
      <div v-for="(val, key, index) in ninja">
        <p>{{index}} - {{key}} - {{val}}</p>
      </div>
    </template>
  </div> <!-- end vue-app -->

vue-cli
